---
title: "Café com estatística e R"
subtitle: "Treinamento 1 - Tipos de variáveis, escalas e uma introdução ao R"
date: last-modified
author:
  - name: Marcelo Teixeira Paiva
    orcid: 0000-0001-6334-073X
    email: marcelo_thelin@hotmail.com
    affiliation: 
      - name: CRMV-MG
        city: Belo Horizonte
        state: MG
        country: Brazil
        url: portal.crmvmg.gov.br
abstract: > 
  Relatório do primeiro treinamento onde foi apresentado uma introdução ao R e os conceitos de tipos de variáveis e escalas.
keywords:
  - statistical analysis
license: "CC BY"
copyright: 
  holder: Marcelo Paiva
  year: 2025
citation: 
  container-title: "Café com estatística e R: Treinamento 1 - Tipos de variáveis, escalas e uma introdução ao R"
  volume: 1
  issue: 1
funding: "The author received no specific funding for this work."
lang: pt-BR
toc: true
toc-depth: 4
toc-expand: true
toc-title: "Índice"
number-sections: true
format:
  html:
    code-fold: true
    code-summary: "Mostrar código"
    code-tools: true
    highlight-style: ayu-mirage
    code-line-numbers: true
    theme:
      light: journal
      dark: superhero
    fontsize: 1.1em
    linestretch: 1.7
    max-width: 1800px
    margin: 1rem
  pdf: 
    documentclass: report
    lof: true
    lot: true
    geometry:
      - top=30mm
      - left=20mm
      - heightrounded
    colorlinks: true
---

# Fundamentos de R para análise de dados

```{r}
#| label: setup
#| warning: false

# Pacotes
library(tidyverse)
library(gridExtra)
library(plotly)
library(gt)
library(tidyverse)

# Tema personalizado para gráficos
tema_didatico <- theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 14),
    plot.subtitle = element_text(face = "italic", size = 11),
    axis.title = element_text(size = 12),
    legend.position = "top",
    panel.grid.minor = element_blank()
  )

cores <- c("#FF6B6B", "#4ECDC4", "#45B7D1", "#96CEB4", "#FFEAA7")

```

## Conhecimentos básicos de R

### Instalação do R e RStudio

**R** é uma linguagem para computação estatística, enquanto **RStudio** é um ambiente de desenvolvimento integrado (IDE) que facilita o trabalho. Ou seja, o R é quem faz o trabalho pesado e o RStudio é uma das várias maneiras de se usar o R com menos esforço.

**Processo de instalação:**
1. Baixe o R em: https://cran.r-project.org/
2. Baixe o RStudio em: https://posit.co/products/open-source/rstudio/?sid=1
3. Siga os passos de instalação de cada um deles em suas próprias páginas.

### Sintaxe Básica

Imagine que você vai ler um artigo. Você imprime esse documento e inicia sua leitura, mas começa sentir sono e resolve parar e ir tomar um café. Quando você retorna para continuar sua leitura, seu artigo sumiu! Pior que isso, você também esqueceu onde havia parado de ler!

Então você precisa novamente imprimir o documento e iniciar sua leitura novamente. Agora imagine que isso acontece a cada vez que para de ler e se distancia do seu documento. Seria um sofrimento ler qualquer artigo, uma vez que sempre seria necessário imprimir e ler o documento de uma vez.

O mesmo ocorre na análise de dados e computação em geral, nós queremos ter uma forma de ler ou registrar um dado e depois poder retornar a usá-lo sem grandes problemas. Para isso usamos variáveis (que não é a mesma variável da estatística). Então, no R, uma variável representa um nome associado a um dado gravado na memória. Por ser somente um nome, não há restrições para o que ele nomeia (o tipo de dado), somente não se aceita que ele seja um nome feio, que usa caractéres proibidos (numeros no início, "$"", ".", ",").

```{r}
# | label: creating_variables

# para criar comentários comece a linha com #
# esses comentários são desconsiderados pelo interpretador do R (não processados)

# forma de atribuição mais comum
x <- 10
# forma menos comum
y = 20
# Atribuição reversa - para aqueles que vivem no Upside Down
30 -> z

# R é case-sensitive (diferencia maiusculas de minusculas)
Var1 <- 5
var1 <- 10

# Boas práticas para nomear variável
# Nunca:
# - Começar com números: 2var (incorreto)
# - Usar espaços ou carácteres especiais: minha variavel (incorreto)
# - Usar palavras reservadas: mean, if, for

# Use nomes descritivos, quem lê seu código não sabe o que você pensou
p_valor_teste_t <- 0.032
ic_95_inferior <- 12.3
ic_95_superior <- 18.7
```

### Tipos de Dados

**Numeric (double/integer):**

```{r}
# | label: data_types_numeric

# Números reais (padrão)
altura <- 1.75
peso <- 68.5
# "numeric"
class(altura)
class(1)

# Inteiros (com L)
n_amostras <- 100L
# "integer"
class(n_amostras)
```

**Character (texto):**

```{r}
# | label: data_types_character

tratamento <- "vacina"

# c() é um vetor (agrupamento de dados atômicos)
grupo <- c("controle", "tratado", "placebo")
# "character"
class(tratamento)
```

**Logical (booleano, verdadeiro/falso):**

```{r}
# | label: data_types_logical

significativo <- TRUE
hipotese_nula <- FALSE
p_valor <- 0.01
# operações lógicas: Retorna TRUE ou FALSE
p_valor < 0.05

class(hipotese_nula)
```

### Vetores e Operações Básicas

Os vetores são a estrutura fundamental do R. **Tudo é vetor em sua essência**!

```{r}
# | label: data_types_vector

# Como criar vetores
dados <- c(23, 45, 12, 67, 34)
sequencia <- 1:10
seq_regular <- seq(0, 1, by=0.1)
repeticao <- rep(c(0,1), times=5)

# vetor nomeado
idades <- c(fulano=21, cicrano=43)
names(idades)

# Operações vetorizadas são realizadas elemento por elemento
x <- c( 1,  2,  3,  4,  5)
y <- c(10, 20, 30, 40, 50)

x + y
x * 2
x^2
sqrt(x)

# Operações em vetores de tamanho diferente
# Cuidado! porque ocorre reciclagem do menor vetor
c(1, 2, 3) + c(10, 20)
```

### Funções Básicas

Funções possuem um padrão nome_da_funcao(argumento1, argumento2, ...). Ela é um bloco de código com uma finalidade específica, que abstrai a complexidade de como é feito algo para quem a usa. Então, por exemplo, se uso uma função media(x), eu não preciso saber o "como" e somente o que ela faz (calcula a média de um grupo de elementos em x).

Funções também são úteis quando repetimos um bloco de código em vários momentos de uma análise, pois, podemos definir uma função para executar esse bloco de código uma vez e depois só executá-la (princípio DRY).

```{r}
# | label: functions_basic

dados <- c(23, 45, 12, 67, 34, 28, 51)

# funções do dia-a-dia
sum(dados)        # Soma
mean(dados)       # Média aritmética
median(dados)     # Mediana
var(dados)        # Variância amostral (n-1)
sd(dados)         # Desvio padrão
min(dados)        # Mínimo
max(dados)        # Máximo
range(dados)      # Min e Max
quantile(dados)   # Quartis
summary(dados)    # Resumo estatístico

# Outras funções úteis
# Tamanho do vetor
length(dados)
# Ordenação
sort(dados, decreasing = FALSE)
# Valores únicos
unique(dados)
# Tabela de frequências
dados <- c(rep("a", 2), rep("b", 4), rep("c", 8), rep("d", 1))
table(dados)
prop.table(table(dados))
```

### Operadores Aritméticos e Lógicos

**Operadores Aritméticos:**

```{r}
# | label: arithmetics_operations

# Básicos
10 + 5    # Adição
10 - 5    # Subtração
10 * 5    # Multiplicação
10 / 5    # Divisão
10 ^ 2    # Potenciação
10 ** 2   # Potenciação
10 %% 3   # Módulo (resto): 1
10 %/% 3  # Divisão inteira: 3

amostra <- sample(0:200, 1e6, replace = TRUE)
media <- sum(amostra) / length(amostra)
variancia <- sum((amostra - mean(amostra))^2) / (length(amostra) - 1)
```

**Operadores Lógicos:**

```{r}
# | label: boolean_operations

# Comparação
5 > 3      # maior
5 < 3      # menor
5 >= 3     # maior ou igual
5 <= 3     # menor ou igual
5 == 3     # igual
5 != 3     # diferente
"a" == "b"

# Operadores booleanos
p <- TRUE
q <- FALSE
# operação   conectivo
!p           # NEGAÇÂO
p & q        # E - conjunção (só é V em VV)
p | q        # OU - disjunção inclusiva (só é F em FF)
xor(p, q)    # OU OU - disjunção exclusiva (é F sempre que iguais - VV, FF)
!p | q       # equivalente à condicional
(!p | q) & (!q | p) # equivalente à bicondicional

10 < 12 & 12 > 5

# short circuit evaluation
10 > 12 && nao_existo
10 < 12 || nao_existo

# Vetorização
idades <- c(18, 25, 30, 17, 22)
idades >= 18
```

## Estruturas de dados

### Matrizes

Estruturas bidimensionais com elementos do **mesmo tipo**.

```{r}
# | label: matrices

# Criação de matrizes
matriz1 <- matrix(1:12, nrow=3, ncol=4)
matriz2 <- matrix(1:12, nrow=3, ncol=4, byrow=TRUE)

# Matriz de correlação
dados <- matrix(rnorm(100), ncol=5)
cor_matrix <- cor(dados)

# Operações matriciais
A <- matrix(c(1,2,3,4), nrow=2)
B <- matrix(c(5,6,7,8), nrow=2)

A + B         # Soma elemento por elemento
A * B         # Multiplicação elemento por elemento
A %*% B       # Multiplicação matricial verdadeira
t(A)          # Transposta
solve(A)      # Inversa (se existir)
det(A)        # Determinante

# Dimensões
dim(A)
nrow(A)
ncol(A)
```

### Data Frames

São basicamente tabelas com colunas de **variados tipos** em que cada linha representa um registro (planilha do excel). É o principal tipo de dado com que trabalhamos na prática. Todas as colunas no `data.frame` devem apresentar o mesmo tamanho.

```{r}
# | label: data_frames

# Criação
df <- data.frame(
  id = 1:5,
  tratamento = c("A", "B", "A", "B", "A"),
  peso_inicial = c(65.2, 70.1, 68.5, 72.3, 66.8),
  peso_final = c(68.1, 71.5, 71.2, 73.8, 69.5),
  melhorou = c(TRUE, TRUE, TRUE, TRUE, NA)
)

# Estrutura e resumo
str(df)         # Estrutura do data.frame
summary(df)     # Resumo estatístico simples de cada coluna
head(df)        # Primeiras x linhas
tail(df)        # Últimas x linhas

# Acessando colunas
df$peso_inicial
df[["peso_inicial"]]
df[, "peso_inicial"]
df[, 3]
df[c(1, 3), 3]

# Criando nova variável no data.frame
df$ganho_peso <- df$peso_final - df$peso_inicial
df$ganho_percentual <- (df$ganho_peso / df$peso_inicial) * 100

head(df)
```

### Listas

Estruturas mais flexíveis - podem conter elementos de **tipos e tamanhos diferentes**.

```{r}
# | label: lists

# Lista com resultados de uma análise estatística
resultado_teste <- list(
  nome_teste = "Teste t de Student",
  estatistica_t = 2.453,
  graus_liberdade = 48,
  p_valor = 0.018,
  intervalo_confianca = c(1.23, 5.67),
  dados_originais = df,
  matriz_cov = matrix(rnorm(9), 3, 3)
)

# Acessando elementos
resultado_teste$p_valor
resultado_teste[["p_valor"]]
resultado_teste[[4]]

teste_t <- t.test(df$peso_final, df$peso_inicial, paired=TRUE)
str(teste_t)
names(teste_t)
```

### Fatores

Variáveis categóricas com níveis fixos - essencial para modelos estatísticos.

```{r}
# | label: factors

# Criação de fatores
sexo <- factor(c("M", "F", "F", "M", "F"), levels = c("M", "F"))
levels(sexo)
# Recodificação
levels(sexo) <- c("Masculino", "Feminino")

# Fator ordenado
educacao <- factor(
  c("Médio", "Superior", "Fundamental", "Superior", "Médio"),
  levels = c("Fundamental", "Médio", "Superior"),
  ordered = TRUE
)
as.integer((educacao))

# GLMs e ANOVA tratam fatores como dummies ou como variáveis discretas
df$tratamento[5] <- "C"
df$grupo <- df$tratamento
lm(peso_final ~ grupo, data=df)

df$grupo <- factor(df$tratamento)
lm(peso_final ~ grupo, data=df)

df$grupo <- factor(df$tratamento, ordered = TRUE)
lm(peso_final ~ grupo, data=df)
```

### Arrays

Generalizações de matrizes para **múltiplas dimensões**.

```{r}
# | label: arrays

# Array de 3 dimensões (exemplo: medidas x indivíduos x tempo)
n_pacientes <- 5
n_tempos <- 3
peso_inicial <- rnorm(n_pacientes, mean = 70, sd = 5)
altura_inicial <- rnorm(n_pacientes, mean = 170, sd = 10)
idade_inicial <- rpois(n_pacientes, lambda = 23)

# matriz vazia
peso_tempo <- matrix(nrow = n_pacientes, ncol = n_tempos)
altura_tempo <- matrix(nrow = n_pacientes, ncol = n_tempos)
idade_tempo <- matrix(nrow = n_pacientes, ncol = n_tempos)

for(i in 1:n_pacientes) {
  peso_tempo[i, ] <- peso_inicial[i] + cumsum(c(0, rnorm(n_tempos-1, mean=0.5, sd=1)))
  altura_tempo[i, ] <- altura_inicial[i] + rnorm(n_tempos, mean=0, sd=0.5)
  idade_tempo[i, ] <- idade_inicial[i] + c(0, 0.25, 0.5)
}

imc_tempo <- peso_tempo / (altura_tempo/100)^2

medidas_tempo <- array(
  c(t(peso_tempo), t(altura_tempo), t(imc_tempo), t(idade_tempo)),
  dim = c(n_pacientes, n_tempos, 4),
  dimnames = list(
    paste("Paciente", 1:5),
    c("Mês_0", "Mês_3", "Mês_6"),
    c("Peso", "Altura", "IMC", "Idade")
  )
)

medidas_tempo[1, , ] # paciente 1
medidas_tempo[, , 4] # idade
medidas_tempo[, 2, ] # mes 2

n <- 1000
dados_epi <- data.frame(
  Sexo = sample(c("M", "F"), n, replace = TRUE),
  Idade = sample(c("0-20", "21-40", "41-60", "60+"), n, replace = TRUE),
  Exposicao = sample(c("Sim", "Não"), n, replace = TRUE, prob = c(0.3, 0.7)),
  Doenca = sample(c("Presente", "Ausente"), n, replace = TRUE, prob = c(0.1, 0.9))
)
tabela_4d <- table(dados_epi)
print(dim(tabela_4d))  # 2 x 4 x 2 x 2

# Análise de odds ratio estratificado
for(sexo in c("M", "F")) {
  for(idade in unique(dados_epi$Idade)) {
    subtabela <- tabela_4d[sexo, idade, , ]
    if(all(subtabela > 0)) {
      #|                | desfecho: Sim  | desfecho: Não |
      #|----------------|----------------|---------------|
      #| preditor: Sim  | A              | B             |
      #| preditor: Não  | C              | D             |
      # OR = a*d/b*c
      
      OR <- (subtabela[2,2] * subtabela[1,1]) / 
            (subtabela[2,1] * subtabela[1,2])
      cat(sprintf("OR para %s, %s: %.2f\n", sexo, idade, OR))
    }
  }
}
```

### Indexação e Seleção de Dados

```{r}
# | label: indexing

# VETORES
x <- c(10, 20, 30, 40, 50)
x[2]
x[c(1,3,5)]
x[-2]
x[x > 25]

# MATRIZES [linha, coluna]
mat <- matrix(1:12, nrow=3)
mat[2, 3]
mat[2, ]
mat[, 3]
mat[1:2, 3:4]

# DATA FRAMES
df[2, 3]
df[2, ]
df[, "peso_inicial"]
df$peso_inicial
df[df$tratamento == "A", ]
df[df$ganho_peso > 2 & df$tratamento == "A", c("id", "ganho_peso")]

# LISTAS
lista <- list(a=1:5, b=matrix(1:4,2), c="texto")
lista[[1]]
lista$a
lista[["b"]]
```

# Tipos de variáveis e escalas de mensuração e precisão

## Tipos de variáveis

Variável é uma característica em estudo em uma população (ou amostra) que pode ser **medida, contada ou categorizada**. O tipo influencia na escolha de estatísticas descritivas, gráficos e métodos de análise que serão adotados para analisar os dados. Assim, vamos começar nosso estudo pela classificação das variáveis relativa ao fato de serem mensuradas ou categorizadas, bem como as escalas de mensuração.

Em geral, variáveis são classificadas como **métricas e não métricas**. Variáveis não métricas ou qualitativas são características registradas dentro de um número finito de categorias, em que o indivíduo possui ou não determinada categoria em análise (ex. sexo). Variáveis métricas ou quantitivas são contadas ou mensuradas (nesse caso não há ausência de determinada característica, embora ele possa apresentar 0 dela).

```{mermaid}
%%| label: fig1_diagrama_tipos_variaveis
%%| fig-cap: "Tipos de variáveis."

flowchart TB
  A["Tipos de variáveis"]
  A --> B["Não métricas (qualitativas)"]
  A --> C["Métricas (quantitativas)"]
```

### Variáveis Não Métricas (Qualitativas)

Representam características, atributos ou qualidades que não podem ser medidas numericamente de forma intrínseca. Normalmente, são apresentadas na análise  em tabelas de frequência, sem medidas de posição, dispersão ou forma. Uma medida que pode ser associada é a moda, valor ou categoria mais frequente.

**Características principais**:

- Representam categorias ou classes
- Não admitem operações aritméticas significativas
- Podem ser codificadas numericamente, mas os números são apenas rótulos

**Exemplos**: A) Raça de animais (Holandesa, Jersey, Angus); B) Diagnóstico clínico (positivo, negativo); C) Coloração de pelagem (preto, branco, malhado).

```{r}
#| label: fig2_qualitativa_nominal_ordinal
#| fig-width: 14
#| fig-cap: "Variáveis qualitativas"

# resultados iguais em diferentes simulações
set.seed(42)

dados_vet <- data.frame(
  # Variáveis qualitativas
  especie = sample(c("Cão", "Gato", "Coelho"), 100, replace = TRUE, prob = c(0.5, 0.4, 0.1)),
  sexo = sample(c("Macho", "Fêmea"), 100, replace = TRUE),
  condicao_corporal = sample(c("Magro", "Ideal", "Sobrepeso", "Obeso"), 100, replace = TRUE),
  
  # Variáveis quantitativas
  peso_kg = round(rnorm(100, mean = 15, sd = 8), 1),
  idade_meses = rpois(100, lambda = 36)
)

p1 <- ggplot(
  dados_vet,
  aes(x = especie, fill = especie)
) +
  geom_bar() +
  scale_fill_manual(
    values = cores[1:3]
  ) +
  tema_didatico +
  labs(
    title = "Variável Qualitativa: ESPÉCIE",
    subtitle = "Categorias SEM ordem natural",
    y = "Frequência"
  ) +
  theme(legend.position = "none")

p2 <- ggplot(
  dados_vet,
  aes(x = condicao_corporal, fill = condicao_corporal)
) +
  geom_bar() +
  scale_x_discrete(
    limits = c("Magro", "Ideal", "Sobrepeso", "Obeso")
  ) +
  scale_fill_manual(values = cores) +
  tema_didatico +
  labs(
    title = "Variável Qualitativa ORDINAL: CONDIÇÃO CORPORAL",
    subtitle = "Categorias COM ordem natural",
    y = "Frequência"
  ) +
  theme(legend.position = "none")

grid.arrange(p1, p2, ncol = 2)
```

### Variáveis Métricas (Quantitativas)

Representam quantidades mensuráveis ou que são contadas. Permitem maior gama de possibilidades gráficas (gráficos de linhas, dispersão, histograma, boxplot...), medidas de posição, dispersão e forma.

Podem ser discretas, quando assumem um conjunto finito ou enumerável de valores, ou contínuas, quando os valores estão em um intervalo de números reais (em tese, assumem infinitos valores dentro do intervalo).

**Características principais**:

- Expressam magnitude ou quantidade
- Permitem operações aritméticas (soma, média, etc.)
- Possuem unidade de medida (kg, cm, °C, etc.)

**Exemplos**: A) Peso corporal (kg); B) Contagem de leucócitos (células/μL); C) Produção de leite (litros/dia); D) número de filhos.

```{r}
#| label: fig3_quantitativa_discreta_continua
#| fig-width: 14
#| fig-cap: "Variáveis quantitativas"
#| warning: false

p3 <- ggplot(
  dados_vet,
  aes(x = factor(idade_meses))
) +
  geom_bar(fill = cores[3], alpha = 0.7) +
  tema_didatico +
  labs(
    title = "Variável Quantitativa DISCRETA: IDADE",
    subtitle = "Apenas valores inteiros (meses completos)",
    x = "Idade (meses)",
    y = "Frequência"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

p4 <- ggplot(
  dados_vet,
  aes(x = peso_kg, y = ..density..)
) +
  geom_histogram(
    fill = cores[1], colour = "grey60", alpha = 0.7, size=.2
  ) +
  geom_density(
    color = cores[2], size = 1.2
  ) +
  tema_didatico +
  labs(
    title = "Variável Quantitativa CONTÍNUA: PESO",
    subtitle = "Pode assumir qualquer valor no intervalo",
    x = "Peso (kg)",
    y = "Frequência"
  )

grid.arrange(p3, p4, ncol = 2)
```

## Escalas de mensuração (Stevens, 1946)

Mensuração é o ato de atribuir números ou rótulos a um indíviduo de acordo com regras específicas para representar quantidades ou qualidades de um atributo (a variável em estudo). A escala é o conjunto de possíveis valores que o atributo poderá assumir, considerando a regra de mensuração.

Existem várias classificações de tipos de escala, mas vamos usar a de Stevens (1946), pela simplicidade e amplo uso.

```{mermaid}
%%| label: fig4_diagrama_tipos_escalas
%%| fig-cap: "Tipos de escalas."

flowchart TB
  A["Variável qualitativa"]
  A --> B["Escala Nominal"]
  A --> C["Escala Ordinal"]

  D[Variável quantitativa]
  D --> E["Escala intervalar"]
  D --> F["Escala Razão"]
```

```{r}
#| label: fig5_escalas
#| fig-width: 10
#| fig-cap: "Classificações de escalas"
#| warning: false

escalas_demo <- data.frame(
  # NOMINAL
  cor_pelagem = c("Preto", "Branco", "Caramelo", "Malhado", "Cinza"),
  
  # ORDINAL
  gravidade_doenca = factor(
    c("Leve", "Moderada", "Grave", "Crítica", "Leve"),
    levels = c("Leve", "Moderada", "Grave", "Crítica"),
    ordered = TRUE
  ),
  
  # INTERVALAR
  temperatura_celsius = c(38.5, 39.2, 37.8, 40.1, 38.9),
  
  # RAZÃO
  dose_medicamento_mg = c(0, 50, 100, 150, 200)
)

visualizar_escalas <- function() {
  # Escala Nominal
  p_nominal <- data.frame(
    categoria = escalas_demo$cor_pelagem,
    y = 1:5,
    x = 1
  ) %>%
    ggplot(aes(x = x, y = y, label = categoria, fill = categoria)) +
    geom_tile(width = 0.8, height = 0.8) +
    geom_text(size = 4, color = "white", fontface = "bold") +
    scale_fill_manual(values = cores) +
    tema_didatico +
    labs(
      title = "ESCALA NOMINAL",
      subtitle = "Apenas categorias distintas\n = ou ≠") +
    theme(
      axis.text = element_blank(),
      axis.title = element_blank(),
      legend.position = "none"
    )
  
  # Escala Ordinal
  p_ordinal <- data.frame(
    categoria = as.character(escalas_demo$gravidade_doenca),
    y = 1:5,
    x = 1,
    ordem = as.numeric(escalas_demo$gravidade_doenca)
  ) %>%
    ggplot(aes(x = x, y = ordem, label = categoria, fill = ordem)) +
    geom_tile(width = 0.8, height = 0.8) +
    geom_text(size = 4, color = "white", fontface = "bold") +
    scale_fill_gradient(low = cores[4], high = cores[1]) +
    tema_didatico +
    labs(
      title = "ESCALA ORDINAL",
      subtitle = "Ordem importa!\n = ou ≠ | > ou <") +
    theme(
      axis.text = element_blank(),
      axis.title = element_blank(),
      legend.position = "none"
    )
  
  # Escala Intervalar
  p_intervalar <- data.frame(
    temp = escalas_demo$temperatura_celsius,
    y = 1:5
  ) %>%
    ggplot(aes(x = temp, y = y)) +
    geom_segment(
      aes(x = 37, xend = temp, y = y, yend = y),
      color = cores[2], size = 2
    ) +
    geom_point(size = 4, color = cores[1]) +
    geom_text(aes(label = paste0(temp, "°C")), vjust = -1) +
    scale_x_continuous(limits = c(37, 41)) +
    tema_didatico +
    labs(
      title = "ESCALA INTERVALAR",
      subtitle = "Intervalos iguais, zero arbitrário\n Todas anteriores | + ou -",
      x = "Temperatura (°C)") +
    theme(
      axis.text.y = element_blank(),
      axis.title.y = element_blank()
    )
  
  # Escala de Razão
  p_razao <- data.frame(
    dose = escalas_demo$dose_medicamento_mg,
    y = 1:5
  ) %>%
    ggplot(aes(x = dose, y = y)) +
    geom_segment(
      aes(x = 0, xend = dose, y = y, yend = y),
      color = cores[3], size = 2
    ) +
    geom_point(size = 4, color = cores[1]) +
    geom_text(aes(label = paste0(dose, "mg")), vjust = -1) +
    scale_x_continuous(limits = c(-10, 210)) +
    geom_vline(xintercept = 0, linetype = "dashed", color = "red") +
    tema_didatico +
    labs(
      title = "ESCALA DE RAZÃO",
      subtitle = "Zero absoluto existe!\n TODAS as operações | × ou ÷",
      x = "Dose (mg)"
    ) +
    theme(
      axis.text.y = element_blank(),
      axis.title.y = element_blank()
    )
  
  grid.arrange(p_nominal, p_ordinal, p_intervalar, p_razao, ncol = 2)
}

visualizar_escalas()
```

### Escala Nominal (Variáveis Não Métricas)

É a mais básica das escalas, onde números ou símbolos servem apenas para identificar e classificar. Não estabelece relações de orgem ou grandeza. Possibilita contar o número de elementos em cada categoria e testar hipóteses sobre a distribuição de unidades dentro das categorias, mas medidas de posição, dispersão e forma não fazem muito sentido para ela.

**Exemplos**:
```
Tipo sanguíneo: A, B, AB, O
Sexo: M=Macho, F=Fêmea
Diagnóstico de LVC: 0=Negativo, 1=Positivo
Espécie animal: 1=Bovino, 2=Suíno, 3=Equino
País de Origem: Brasil, Bolívia, Peru, Canadá, ...
```

**Propriedades matemáticas**:

- Equivalência (=, ≠)
- Não há ordenação intrínseca

**Ferramentas ou medidas para caracterização dos dados**:

- Tabelas de frequência
- Gráficos de barras ou setores
- Contagem de frequências, moda

**Análise estatística possível**:

- Teste qui-quadrado ($\chi^{2}$)
- Coeficiente de contingência ($CC$)
- $V$ de Cramér

### Escala Ordinal (Variáveis Não Métricas)

Ainda classifica o atributo em classes ou categorias, mas existe uma relação inerente de ordem entre as diferentes categorias, mesmo que as distâncias entre categorias não sejam necessariamente iguais. Por exemplo, a idade dos indivíduos sendo mensurada nas faixas etárias jovem (15 a 21 anos), adulto (22 a 65 anos), idoso (mais que 65 anos). Embora, exista uma ordem entre as faixas (idoso > adulto > jovem, na idade), o intervalo entre cada classe não é igual, ou seja, não faz sentido eu pensar em algo como "1 idoso = 3 jovem anos".

**Exemplos**:
```
Escore de condição corporal: 1 (magro) < 2 < 3 < 4 < 5 (obeso)
Grau de claudicação: 0 (normal) < 1 (leve) < 2 (moderado) < 3 (severo)
Escolaridade: fundamental < médio < superior
Escala Linkert: 1 (Total discordância) < 2 < 3 (Neutro) < 4 < 5 (Total cordância)
```

**Propriedades matemáticas**:

- Relações de ordem e equivalência (<, >, =)
- Intervalos entre categorias não são uniformes

**Ferramentas ou medidas para caracterização dos dados**:

- Tabelas de frequência
- Gráficos de barras ou setores
- Contagem de frequências, moda, mediana, percentis, correlação de Spearman

**Análise estatística possível**:

- Teste de Mann-Whitney $U$
- Teste de Kruskal-Wallis
- Correlação de postos de Spearman ($\rho$ de Spearman)
- Correlação de postos de Kendall ($\tau$ de Kendall)

### Escala Intervalar (Variável Quantitativa)

Além de haver ordenação, possui intervalos iguais entre valores, ou seja, unidade de medida constante. Porém, o zero da escala é arbitrário (não representa ausência absoluta). Assim, conseguimos calcular a diferença entre dois valores mensurados, mas não podemos inferir que um seja múltiplo do outro.

**Exemplos**:
```
Temperatura em Celsius: 0°C é arbitrário
Calendário: ano 0 é convenção
Escores padronizados (z-score): média=0 por construção
```

**Propriedades matemáticas**:

- Relações de ordem e equivalência (<, >, =)
- Permite inferir diferença
- Razões não têm significado
- Se X está em escala intervalar, então:
  - Y = a + bX também está em escala intervalar
  - A razão X₁/X₂ não é invariante sob transformação linear

```{r}
# peso em quilos ou gramas
x1 = 10 # 10 kg
x2 = 100 # 100 kg

x2 / x1

y1 = x1 * 1000 # 10000 g
y2 = x2 * 1000 # 100000 g

y2 / y1

# temperatura em celsius ou fahrenheit (1.8 * C + 32)
x1 = 10 # 10 C
x2 = 20 # 20 C

x2 / x1

y1 = 32 + (1.8 * x1) # 50 F
y2 = 32 + (1.8 * x2) # 68 F

y2 / y1

x3 = 30
y3 = 32 + (1.8 * x3)

(x3 - x1) / (x3 - x2) == (y3 - y1) / (y3 - y2)
```


**Ferramentas ou medidas para caracterização dos dados**:

- Gráficos de linhas, dispersão, histograma, boxplot
- Média, desvio-padrão, mediana, percentis, correlação (com os devidos cuidados)

```{r}
set.seed(21)

x <- rnorm(10000, mean=283.15, sd=5.15) # aproximadamente 20°C
mean(x)
sd(x)
sd(x) / mean(x) * 100

y = x*2
mean(y)
sd(y)
sd(y) / mean(y) * 100

y = x - 273.15
mean(y)
sd(y)
sd(y) / mean(y) * 100
```

```{r}
#| label: fig6_transformacao_linear
#| fig-width: 10
#| fig-cap: "Distribuição de uma variável na escala razão e sua transformada nas escalar intervalar."
#| warning: false

temperatures <- tibble(kelvin = x, celsius = y)

k_plot <- ggplot(data = temperatures, aes(x=kelvin, y = ..density..)) +
  geom_histogram(fill = "cornsilk", colour = "grey60", size = .2) +
  geom_density(linetype = "dashed") +
  labs(
    x = "Kelvin",
    y = "Densidade"
  ) +
  geom_vline(xintercept = mean(temperatures$kelvin), linetype = "dotted", color = "blue", size = 1) +
  annotate(
    "text",
    label = str_c(
      "Média = ", round(mean(temperatures$kelvin), 1),
      "\nDP = ", round(sd(temperatures$kelvin), 1),
      "\nCV = ", round(sd(temperatures$kelvin) / mean(temperatures$kelvin) * 100, 1), "%"
    ),
    x = mean(temperatures$kelvin) + 6,
    y = 0.02,
    color = "blue"
  ) +
  scale_x_continuous(breaks = seq(260, 305, 5)) +
  theme_bw()

c_plot <- ggplot(data = temperatures, aes(x=celsius, y = ..density..)) +
  geom_histogram(fill = "cornsilk", colour = "grey60", size = .2) +
  geom_density(linetype = "dashed") +
  labs(
    x = "Celsius",
    y = "Densidade"
  ) +
  geom_vline(xintercept = mean(temperatures$celsius), linetype = "dotted", color = "blue", size = 1) +
  annotate(
    "text",
    label = str_c(
      "Média = ", round(mean(temperatures$celsius), 1),
      "\nDP = ", round(sd(temperatures$celsius), 1),
      "\nCV = ", round(sd(temperatures$celsius) / mean(temperatures$celsius) * 100, 1), "%"
    ),
    x = mean(temperatures$celsius) + 5,
    y = 0.02,
    color = "blue"
  ) +
  scale_x_continuous(breaks = seq(-10, 30, 5)) +
  theme_bw()

marrangeGrob(
    list(k_plot, c_plot),
    ncol = 2, nrow = 1,
    top = "Distribuição da variável original e sua transformada na forma Y = aX + b"
)
```

**Análise estatística possível**:

- Testes paramétricos ou não-paramétricos
- Coeficiente de correlação de Pearson ($\rho$ de Pearson)

### Escala de Razão (Variável Quantitativa)

Possui todas as propriedades da escala intervalar, mais um zero absoluto significativo.

**Exemplos**:
```
Peso: 0 kg = ausência de massa
Contagem: 0 células = nenhuma célula
Concentração: 0 mg/dL = ausência da substância
Tempo de reação: 0 segundos = instantâneo
```

**Propriedades matemáticas**:

- Zero representa ausência completa
- Relações de ordem e equivalência (<, >, =)
- Permite inferir diferença e razão
- Todas as operações aritméticas são válidas (+, -, *, /)
- Operações permitidas: média, desvio padrão, correlação de Pearson

**Ferramentas ou medidas para caracterização dos dados**:

- Gráficos de linhas, dispersão, histograma, boxplot
- Média, desvio-padrão, coeficiente de variação, mediana, percentis, correlação

**Análise estatística possível**:

- Testes paramétricos ou não-paramétricos
- Coeficiente de correlação de Pearson ($\rho$ de Pearson)

**Tabela resumo do efeito da transformação linear nas propriedades das variáveis quantitativas**

| Propriedade            | Transformação Linear Positiva (Y=a+bX, b>0 e a>0) | Transformação de Proporção (Y=bX, b>0 e a=0) |
|------------------------|---------------------------------------------------|----------------------------------------------|
| Ordem (X₁ < X₂)        | Invariante                                        | Invariante                                   |
| Diferenças             | Não invariante (multiplicadas por b)              | Não invariante                               |
| Razões de diferenças   | Invariante                                        | Invariante                                   |
| Razões diretas (X₁/X₂) | Não invariante                                    | Invariante                                   |
| Correlação             | Invariante                                        | Invariante                                   |
| Média                  | Não invariante                                    | Não invariante                               |
| CV                     | Não invariante                                    | Invariante                                   |

Invariante significa que determinada propriedade permanece inalterada após a transformação.

Em termos matemáticos:

- Dada uma propriedade $P(X)$ de uma variável $X$
- e uma transformação $T$ de $X$ em uma variável $Y$: $X \rightarrow Y = T(X)$
- $P$ é invariante sob $T$ se: $P(X) = P(Y)$


## Número de categorias e pecisão

Variáveis qualitativas podem ser classificadas em dicotômicas quando apresentam apenas duas categorias ou policotômicas quando possuem mais que duas categorias. Já as variáveis quantitativas podem ser classificadas conforme a escala de precisão em discretas ou contínuas.

```{mermaid}
%%| label: fig7_diagrama_classificacao_precisao
%%| fig-cap: "Classificação conforme o número de categorias e escala de precisão."

flowchart TB
  A["Variável qualitativa"]
  A --> B["Dicotômica ou binária"]
  A --> C["Policotômica"]

  D[Variável quantitativa]
  D --> E["Discreta"]
  D --> F["Contínua"]
```

```{r}
#| label: fig8_distribuicoes_categoria_precisao
#| fig-width: 10
#| fig-cap: "Distribuição de uma variável conforme o número de categorias e escala de precisão."
#| warning: false
#| fig-height: 12

set.seed(123)
n <- 200

dados_categorias <- data.frame(
  # DICOTÔMICA/BINÁRIA
  vacinado = sample(c("Sim", "Não"), n, replace = TRUE),
  teste_positivo = sample(0:1, n, replace = TRUE),
  
  # POLICOTÔMICA
  especie = sample(
    c("Canino", "Felino", "Lagomorfo", "Ave", "Réptil"),
    n, replace = TRUE, prob = c(0.4, 0.3, 0.15, 0.1, 0.05)
  ),
  
  # DISCRETA
  numero_filhotes = rpois(n, lambda = 3),
  dias_internacao = sample(0:14, n, replace = TRUE),
  
  # CONTÍNUA
  glicemia = round(rnorm(n, mean = 100, sd = 20), 1),
  peso_gramas = round(rnorm(n, mean = 3500, sd = 1200), 2)
)

visualizar_tipos_categorias <- function() {
  # DICOTÔMICA
  p_dic1 <- ggplot(
    dados_categorias,
    aes(x = vacinado, fill = vacinado)
  ) +
  geom_bar() +
  scale_fill_manual(values = cores[c(1,3)]) +
  tema_didatico +
  labs(
    title = "Variável DICOTÔMICA",
    subtitle = "Exatamente 2 categorias",
    y = "Frequência"
  ) +
  theme(legend.position = "none")
  
  # DICOTÔMICA como dummy (0/1)
  p_dic2 <- ggplot(
    dados_categorias,
    aes(x = factor(teste_positivo))
  ) +
  geom_bar(fill = cores[2]) +
  scale_x_discrete(labels = c("0\n(Negativo)", "1\n(Positivo)")) +
  tema_didatico +
  labs(
    title = "Variável DUMMY (0/1)",
    subtitle = "Dicotômica codificada numericamente",
    x = "Resultado do teste",
    y = "Frequência"
  )
  
  # POLICOTÔMICA
  p_poli <- ggplot(
    dados_categorias,
    aes(x = especie, fill = especie)
  ) +
  geom_bar() +
  scale_fill_manual(values = cores) +
  tema_didatico +
  labs(
    title = "Variável POLICOTÔMICA",
    subtitle = "Mais de 2 categorias",
    y = "Frequência"
  ) +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 45, hjust = 1)
  )
  
  # DISCRETA
  p_disc <- ggplot(
    dados_categorias,
    aes(x = numero_filhotes)
  ) +
  geom_bar(fill = cores[4], alpha = 0.7) +
  scale_x_continuous(breaks = 0:max(dados_categorias$numero_filhotes)) +
  tema_didatico +
  labs(
    title = "Variável DISCRETA",
    subtitle = "Valores inteiros, contáveis",
    x = "Número de filhotes",
    y = "Frequência"
  )
  
  # CONTÍNUA
  p_cont <- ggplot(
    dados_categorias,
    aes(x = glicemia)
  ) +
  geom_histogram(
    aes(y = ..density..),
    fill = cores[5],
    alpha = 0.7,
    bins = 30
  ) +
  geom_density(color = cores[1], size = 1.2) +
  tema_didatico +
  labs(
    title = "Variável CONTÍNUA",
    subtitle = "Infinitos valores possíveis no intervalo",
    x = "Glicemia (mg/dL)",
    y = "Densidade"
  )
  
  # Demonstração de precisão: discreta vs contínua
  p_precisao <- data.frame(
    discreta = dados_categorias$dias_internacao,
    continua = dados_categorias$peso_gramas/1000
  ) %>%
  ggplot() +
  geom_point(
    aes(x = 1, y = discreta),
    color = cores[2],
    position = position_jitter(width = 0.02, height = 0),
    alpha = 0.5
  ) +
  geom_point(
    aes(x = 2, y = continua*5),
    color = cores[3],
    position = position_jitter(width = 0.02, height = 0),
    alpha = 0.5
  ) +
  scale_x_continuous(
    breaks = c(1, 2),
    labels = c("Discreta\n(dias)", "Contínua\n(kg)")
  ) +
  scale_y_continuous(breaks = seq(0, 38, 1)) +
  tema_didatico +
  labs(
    title = "PRECISÃO: Discreta vs Contínua",
    subtitle = "Discreta: gaps entre valores | Contínua: qualquer precisão",
    x = "",
    y = "Valores observados"
  )
  
  grid.arrange(
    p_dic1, p_dic2, p_poli, p_disc, p_cont, p_precisao,
    layout_matrix = rbind(
      c(1, 2),
      c(3, 4),
      c(5, 5),
      c(6, 6),
      c(6, 6),
      c(6, 6)
    )
  )

}

visualizar_tipos_categorias()
```

### Variável Dicotômica ou Binária (Dummy)

Variável com exatamente duas categorias mutuamente exclusivas. Nas variáveis dummy, uma categoria indica a presença de determinada característica e a outra a ausência.

**Representação matemática**:
```
X = {0, 1} ou X = {Sim, Não}
P(X=1) = p, P(X=0) = 1-p
```

**Propriedades estatísticas**:

- $E[X] = p$
- $Var(X) = p(1-p)$
- Distribuição: $X \sim Bernoulli(p)$

**Exemplos**:

- Presença/ausência de doença
- Vacinado/não vacinado
- Tratamento/controle

### Variável Policotômica

Variável categórica com três ou mais categorias.

**Tipos**:

- Nominal policotômica: sem ordem (raça, região)
- Ordinal policotômica: com ordem (estágio da doença: I, II, III)

Uma variável qualitativa com $n$ categorias pode ser representada por $n-1$ variáveis dummies (dicotômicas).

| Estágio da doença | D1 | D2 |
|-------------------|----|----|
| Estágio I         | 0  | 0  |
| Estágio II        | 0  | 1  |
| Estágio III       | 1  | 0  |


### Variável Quantitativa Discreta

Assume valores em um conjunto enumerável (geralmente inteiros), geralmente finito ("infinito somente nos extremos").

**Características**:

- Resultado de contagem
- Valores isolados na reta numérica
- Função de probabilidade: $P(X = x)$
  - $E[X] = \mu_x = \sum_{i=1}^{n} x_i P(X = x_i), i=1,2,...,n$

**Distribuições comuns**:

- $Poisson(\lambda)$: contagem de eventos raros
- $Binomial(n,p)$: número de sucessos em n tentativas
- Binomial Negativa, $BinNeg(n,p)$: número de falhas até o fim do experimento

**Exemplos**:
```
Número de crias: 0, 1, 2, 3, ...
Contagem de parasitas: valores inteiros ≥ 0
Número de tratamentos: 1, 2, 3, ...
```

### Variável Quantitativa Contínua

Pode assumir qualquer valor em um intervalo dos reais (infinitos valores dentro do intervalo).

**Características**:

- Resultado de medição
- Infinitos valores possíveis em qualquer intervalo
- Função densidade de probabilidade: $f(x)$
  - $f(x) > 0$
  - $\int f(x)dx = 1$
  - a probabilidade de $X$ assumir valores dentro de um intervalo $[a, b]$ é justamente a área sob a curva de $f(x)$ limitada pelos pontos $a$ e $b$, logo, $P(a \leq X \leq b) = \int_{a}^{b} f(x)dx$
  - $E[X] = \int_{-\infty}^{+\infty} xf(x)dx$

**Distribuições comuns**:

- $Normal(\mu, \sigma^2)$: muitos fenômenos naturais
- $Exponencial(\lambda)$: tempo entre eventos
- $Gamma(\alpha, \beta)$: tempos de espera, concentrações

**Exemplos**:
```
Peso corporal: qualquer valor positivo real
Glicemia: valores contínuos em mg/dL
Produção de leite: litros com precisão decimal
```

### Implicações práticas do tipo de variável na análise estatística

**Testes de hipótese**

- Nominal: Qui-quadrado, Teste Exato de Fisher, Coeficiente de associação
- Ordinal: Mann-Whitney, Kruskal-Wallis, Coeficiente de correlação de Spearman
- Quantitativa: Correlação de Pearson, Teste t, ANOVA (se normal), Correlação de Spearman, Mann-Whitney, Kruskal-Wallis (se não normal)

**Modelagem Estatística**

- Binária: Regressão Logística
- Policotômica: Regressão Multinomial
- Ordinal: Regressão Ordinal (Proportional Odds)
- Contagem: Regressão Poisson/Binomial Negativa
- Contínua: Regressão Linear (se normal)

**Cuidados na interpretação de suas variáveis em estudo**

1. **Nem sempre números são variáveis quantitativas**: código postal, ID do paciente, número de documento...
2. **Não tratar ordinal como quantitativa**: A média de escores 1, 2, 3 possui algum significado? E o desvio padrão dos estágios 1, 2, 3 e 4 de determinada neoplasia?
3. **Zero em escalas intervalares não indicam ausência**: 0°C ≠ ausência de temperatura
4. **Verificar escala antes de calcular razões**: 20°C não é "duas vezes mais quente" que 10°C
5. **Considerar a precisão da medida**: Uma balança com precisão de 1kg torna a variável peso, que é inerentemente contínua, em uma variável discreta na prática.
6. **Sempre leve em consideração as transformações aplicadas na variável**: aX+b, log(X), sqrt(X).
